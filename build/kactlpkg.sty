% This is file contains LaTeX macros for KACTL (KTH ACM Contest Template Library)
% Written by HÃ¥kan Terelius, 2008-11-24
\ProvidesPackage{kactlpkg}

\usepackage{amsmath,amsthm,amssymb,amsfonts,braket,booktabs,caption,color}
\usepackage{datetime,enumitem,fancyhdr,float,fullpage,graphicx,latexsym}
\usepackage{listings,multicol,parcolumns,subcaption,textcomp,titling,upquote}
\usepackage{verbatim,wrapfig}

\usepackage[usenames,dvipsnames]{xcolor}
\usepackage[scaled]{beramono}
\usepackage[T1]{fontenc}
\usepackage[utf8x]{inputenc}

\usepackage[top=1cm, bottom=1.5cm, left=1cm, right=1cm]{geometry}
\usepackage{minted}

% Math and bit operators
\DeclareMathOperator{\lcm}{lcm}
\newcommand*\BitAnd{\mathrel{\&}}
\newcommand*\BitOr{\mathrel{|}}
\newcommand*\ShiftLeft{\ll}
\newcommand*\ShiftRight{\gg}
\newcommand*\BitNeg{\ensuremath{\mathord{\sim}}}
\DeclareRobustCommand{\stirling}{\genfrac\{\}{0pt}{}}

% Config commands
\newcommand{\subtitle}[1]{
	\def\@subtitle{#1}
}
\newcommand{\team}[2]{
	\def\@teamname{#1}
	\def\@teammembers{#2}
}
\newcommand{\contest}[2]{
	\def\@contestname{#1}
	\def\@contestdate{#2}
}
\newcommand{\university}[3]{
	\def\@unishort{#1}
	\def\@unilong{#2}
	\def\@unilogo{#3}
}

% Some default config
\subtitle{{\tiny new}KACTL}
\title{KTH ACM Contest Template Library}

\def\today{\number\year-\ifthenelse{\number\month<10}{0}{}\number\month-\ifthenelse{\number\day<10}{0}{}\number\day} % Defines \today as YYYY-MM-DD

\renewcommand{\maketitle}[2]{
	\begin{center}
		{\LARGE \@title}\\
		{\Large \@subtitle{} version #2}\\[0.1cm]
		{\LARGE \textsc{#1}}
	\end{center}
}

% Remove temp files from old failed runs
\AtBeginDocument{\immediate\write18{rm -f header.tmp}}
\AtEndDocument{\immediate\write18{rm -f header.tmp}\immediate\write18{rm -f header2.tmp}\immediate\write18{rm -f kactl.tmp}}

% Include a list of source files at the top of every page. For the purpose
% of recording those, we use eTeX marks. (We can't just append data directly to
% the header, because TeX outputs pages asynchronously, noticably so when
% multicol is in use.) There is no command for getting all marks set on a page,
% so we take only the last one and include all non-included files up until that
% one. Most of the time \splitbotmark will give us the right mark, but in rare
% cases things fall down and we try to make the best of things by falling back
% to \botmark. Also, since LaTeX is terrible at string manipulation, we do all
% actual processing in Python, stashing global state in header.tmp.
\newmarks\hdrmark
\pagestyle{fancy}

\setlength{\headheight}{15.2pt}
\setlength{\droptitle}{-20pt}
\posttitle{\par\end{center}}
\renewcommand{\footrulewidth}{0.4pt}

\renewcommand{\headrulewidth}{0pt}
\headheight 25pt
\lhead{\@unishort}
\chead{\hspace{3mm}\textbf{\immediate\write18{python2 kactlprocessor.py --print-header "\splitbotmarks\hdrmark|\botmarks\hdrmark" -o header2.tmp}\immediate\input{header2.tmp}}}
\rhead{\thepage /\pageref{LastPage}}
\lfoot{}\cfoot{}\rfoot{}
\fancyheadoffset{0pt}
\fancyfootoffset{0pt}
\setlength\headsep{5pt}

% Configure minted (parameter: language) (see section 6 of minted manual)
\newminted{cpp}{fontsize=\small,breaklines,tabsize=2}
\newminted{vim}{fontsize=\small,breaklines,tabsize=2}
\newminted{bash}{fontsize=\small,breaklines,tabsize=2}
\newminted{java}{fontsize=\small,breaklines,tabsize=2}
% Now, the environment cppcode is defined.

\setlength{\columnseprule}{0.5pt} % Multicol separation line width
\setlength{\columnsep}{10pt} % Multicol separation margin
\setcounter{tocdepth}{1} % Table of contents depth

\pdfsuppresswarningpagegroup=1

\newcommand{\maketeampage}{
	\pagestyle{empty}
	\begin{center}
		\strut % Magic
		\vspace{3cm}\\
		\includegraphics[width=3cm]{\@unilogo}\\
		{\Huge \@unilong\\}
		{\fontsize{60}{60}\selectfont \@teamname\\}
		\vspace{0.5cm}
		{\Large \@teammembers\\}
		\vfill
		{\huge \@contestname}\\
		\vspace{0.5cm}
		{\Large \@contestdate}\\
		\vspace{1cm}
	\end{center}
	\clearpage
	\pagestyle{fancy}
	\setcounter{page}{1}
}

\newcommand{\kactlref}[1]{
	\addcontentsline{ptc}{subsection}{\texttt{#1}\hspace{0.2em}}
	\marks\hdrmark{#1}
}

\newcommand{\subsubsubsection}[1]{\paragraph{#1}}

% Like \needspace, except with flush bottoms.
\newcommand{\myneedspace}[1]{%
  \begingroup
    \setlength{\dimen@}{#1}%
    \vskip\dimen@
    \penalty 9999%
    \vskip -\dimen@
    \vskip\z@skip
  \endgroup
}

\newcommand{\kactlimport}[2][]{ % Using empty default parameter
	\leftcaption{}\rightcaption{}
	\setboolean{hasdescription}{false}
	\setboolean{hasusage}{false}
	\setboolean{hastime}{false}
	\setboolean{hasmemory}{false}
	\setboolean{hasleftcaption}{false}
	\myneedspace{3\baselineskip}
	\penalty-100
	\immediate\write18{rm -f kactl.tmp} % Don't include old kactl.tmp on failure.
	\immediate\write18{python2 kactlprocessor.py -i "\@kactldir/#2" -o kactl.tmp #1}
	\immediate\input{kactl.tmp}
}

\newcommand{\import}[1]{
	\input{"\@kactldir/#1"}
}

\newcommand{\kactlcontentdir}[1]{
	\def\@kactlbasedir{#1}
	\def\@kactldir{#1}
}
\kactlcontentdir{.}

\newcommand{\kactlchapter}[1]{
	\def\@kactldir{\@kactlbasedir/#1}
	\input{"\@kactldir/chapter.tex"}
	\def\@kactldir{\@kactlbasedir}
}

\newcommand{\kactlerror}[1]{
	\PackageError{kactlpkg}{#1}{}
}

\newcommand{\kactlwarning}[1]{
	\PackageWarning{kactlpkg}{#1}
}

\newboolean{hasleftcaption}
\newcommand{\leftcaption}[1]{
	\def\@leftcaption{#1}
	\setboolean{hasleftcaption}{true}
}
\leftcaption{}
\setboolean{hasleftcaption}{false}

\newcommand{\rightcaption}[1]{
	\def\@rightcaption{#1}
}
\rightcaption{}

\newboolean{hasdescription}
\newcommand{\defdescription}[1]{
	\def\@defdescription{#1}
	\setboolean{hasdescription}{true}
}
\defdescription{}
\setboolean{hasdescription}{false}

\newboolean{hasusage}
\newcommand{\defusage}[1]{
	\def\@defusage{\texttt{#1}}
	\setboolean{hasusage}{true}
}
\defusage{}
\setboolean{hasusage}{false}

\newboolean{hastime}
\newcommand{\deftime}[1]{
	\def\@deftime{#1}
	\setboolean{hastime}{true}
}
\deftime{}
\setboolean{hastime}{false}

\newboolean{hasmemory}
\newcommand{\defmemory}[1]{
	\def\@defmemory{#1}
	\setboolean{hasmemory}{true}
}
\defmemory{}
\setboolean{hasmemory}{false}


\newcommand{\codeheader}[2]{
	{\par\noindent\scriptsize{\textbf{#1:} #2\par}}
}

\newcommand{\makecaption}[1]{
	\begin{center} \textbf{#1}\end{center}
	\ifthenelse{\boolean{hasdescription}}{\codeheader{Description}{\@defdescription}}{}
	\ifthenelse{\boolean{hasusage}}{\codeheader{Usage}{\@defusage}}{}
	\ifthenelse{\boolean{hasmemory}}{\codeheader{Memory}{\@defmemory}}{}
	\ifthenelse{\boolean{hastime}}{\codeheader{Time}{\@deftime}}{}
	\ifthenelse{\boolean{hasleftcaption}}{\vspace{0pt}}{\vspace{-5pt}}
	{ \tiny \texttt{\@leftcaption} \hfill \@rightcaption }
	\vspace{.15em}
	\hrule
}

\newcommand{\bigo}[1] {\ensuremath{\mathcal{O} \left( #1 \right)}}

\newcommand{\hardcolumnbreak}{\vfill\null\columnbreak}

% A really compact enumeration:
\newenvironment{myitemize}
{\begin{itemize}[leftmargin=.3cm]
	\setlength{\itemsep}{0pt}
	\setlength{\parskip}{0pt}
	\setlength{\parsep}{0pt}     }
{ \end{itemize}                  }

